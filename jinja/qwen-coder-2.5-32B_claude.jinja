{# システムプロンプトの定義 #}
{%- set default_system_message = "あなたは優秀な日本のソフトウェアエンジニアです。入力言語に関わらず、常に日本語で応答してください。コード、コメント、思考プロセス、解説はすべて日本語で記述してください。すべてのコードスニペットに Markdown フォーマットを使用し、簡潔性と一貫性を確保してください。複雑なコードや技術的概念は段階的に説明してください。変数、関数、クラス、オブジェクトには詳細なコメントを記述し、他のプログラマーがミスしないよう注意点を明記してください。あなたの専門知識はウェブ開発から組み込みシステムまで多岐にわたり、高度な推論技術を用いて複雑な問題を解決することができます。技術的に正確、安全、効率的、かつ高可読性なコードを生成するために、以下を遵守してください。\n\n1. **文脈理解**: ユーザーの指示を完全に理解し、Chain-of-Thought (CoT) 推論を用いてタスクを分解します。Tree-of-Thoughts (ToT) を活用して複数の解決策を検討し、それぞれの長所と短所を比較分析した上でユーザーに提示し、最適なアプローチを推奨します。\n\n2. **動作モード**:\n _ **FIM モード (Fill-in-the-Middle)**: 簡潔さを最優先します。コード補完に特化し、設計意図を伝えるために必要な最小限のコードとコメントのみを提供します。冗長な説明や挨拶は避けてください。\n _ **チャットモード**: 詳細さと正確さを最優先します。サンプルコードとアルゴリズムの説明を含む、包括的なコード解説を提供します。潜在的なバグについて警告し、修正を提案します。\n\n3. **推論と設計**:\n _ CoT を使用して、ユーザーの要求をより小さく、管理しやすいサブタスクに分解します。各サブタスクに対して段階的な推論を実行します。\n _ ToT を使用して、複数の実装アプローチを検討します。これらのオプションをユーザーに提示し、それぞれの利点と欠点を比較します。この分析に基づいて最適なソリューションを推奨します。\n _ 推論プロセスにエラーがある可能性を認識します。初期の仮定が正しくない場合は、別の結論を検討してください。\n _ 必要に応じて、前提条件、制約、または要件についてユーザーに問い合わせ、正確な推論と解決策を保証します。\n\n4. **コード品質**:\n _ **セキュリティ**: セキュリティのベストプラクティスを実装します。\n _ **可読性**: 明確な命名規則、一貫したフォーマット、論理的なコード構造を通じて、可読性を最優先します。\n _ **保守性**: ドキュメントとコーディング標準を遵守し、チーム開発を考慮した設計を行います。\n _ **効率性**: 明瞭さを犠牲にすることなく、パフォーマンスを最適化します。\n\n5. **出力形式**:\n _ コードブロックには、常に言語とファイル名を含めてください (例: ` ```python filename.py `)。\n _ チャットのタイトルには、チャットの内容に直接関連する 3〜4 語のタイトルを生成します。直接関連する場合を除き、動詞の使用は避けてください。追加のテキスト、説明、句読点はありません。\n\n6. **エラー処理**:\n _ コード内の潜在的なエラー、エッジケース、例外を事前に特定し、対処します。\n _ 日本語で明確かつ有益なエラーメッセージを提供し、問題を解決する方法をユーザーに案内します。\n \* 制限や制約に遭遇した場合は、代替アプローチや回避策を提案します。\n\n**最終目標**: 体系的、論理的、高効率、高セキュリティ、高可読性、高保守性のコードを作成し、最高水準のソフトウェアエンジニアリングを提供すること。" -%}

{# チャットテンプレートの定義 #}
{# ツールが提供されている場合の処理 #}
{%- if tools %}
    {{- '<|im_start|>system\n' }}
    
    {# システムメッセージの設定: 提供されている場合はそれを使用、なければデフォルトを使用 #}
    {%- if messages[0]['role'] == 'system' %}
        {{- messages[0]['content'] + default_system_message }}
    {%- else %}
        {{- default_system_message }}
    {%- endif %}
    
    {# ツール機能の説明を追加 #}
    {{- "\n\n# Tools\n\nYou may call one or more functions to assist with the user query.\n\nYou are provided with function signatures within <tools></tools> XML tags:\n<tools>" }}
    
    {# 各ツールの情報をJSON形式で追加 #}
    {%- for tool in tools %}
        {{- "\n" }}
        {{- tool | tojson }}
    {%- endfor %}
    
    {# ツール呼び出しのフォーマット説明 #}
    {{- "\n</tools>\n\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\n<tool_call>\n{\"name\": <function-name>, \"arguments\": <args-json-object>}\n</tool_call><|im_end|>\n" }}

{# ツールがない場合の処理 #}
{%- else %}
    {# システムメッセージの設定: 提供されている場合はそれを使用、なければデフォルト使用 #}
    {%- if messages[0]['role'] == 'system' %}
        {{- '<|im_start|>system\n' + messages[0]['content'] + default_system_message + '<|im_end|>\n' }}
    {%- else %}
        {{- '<|im_start|>system\n' + default_system_message + '<|im_end|>\n' }}
    {%- endif %}
{%- endif %}

{# メッセージループ: 各メッセージを順に処理 #}
{%- for message in messages %}
    {# ユーザーメッセージ、ループの最初ではないシステムメッセージ、またはツール呼び出しのないアシスタントメッセージの処理 #}
    {%- if (message.role == "user") or (message.role == "system" and not loop.first) or (message.role == "assistant" and not message.tool_calls) %}
        {{- '<|im_start|>' + message.role + '\n' + message.content + '<|im_end|>' + '\n' }}
    
    {# アシスタントメッセージの処理（ツール呼び出しあり） #}
    {%- elif message.role == "assistant" %}
        {{- '<|im_start|>' + message.role }}
        
        {# アシスタントのコンテンツがある場合追加 #}
        {%- if message.content %}
            {{- '\n' + message.content }}
        {%- endif %}
        
        {# ツール呼び出し情報の追加 #}
        {%- for tool_call in message.tool_calls %}
            {# function属性が定義されている場合の互換性処理 #}
            {%- if tool_call.function is defined %}
                {%- set tool_call = tool_call.function %}
            {%- endif %}
            
            {# ツール呼び出しのJSON形式を作成 #}
            {{- '\n<tool_call>\n{"name": "' }}
            {{- tool_call.name }}
            {{- '", "arguments": ' }}
            {{- tool_call.arguments | tojson }}
            {{- '}\n</tool_call>' }}
        {%- endfor %}
        
        {{- '<|im_end|>\n' }}
    
    {# ツールからの応答処理 #}
    {%- elif message.role == "tool" %}
        {# ツール応答の開始: ループインデックスが0または前のメッセージがツールでない場合 #}
        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != "tool") %}
            {{- '<|im_start|>user' }}
        {%- endif %}
        
        {# ツール応答内容の追加 #}
        {{- '\n<tool_response>\n' }}
        {{- message.content }}
        {{- '\n</tool_response>' }}
        
        {# ツール応答の終了: ループの最後または次のメッセージがツールでない場合 #}
        {%- if loop.last or (messages[loop.index0 + 1].role != "tool") %}
            {{- '<|im_end|>\n' }}
        {%- endif %}
    {%- endif %}
{%- endfor %}

{# 生成プロンプトの追加が要求された場合 #}
{%- if add_generation_prompt %}
    {{- '<|im_start|>assistant\n' }}
{%- endif %}